var rref = require('rref');

const {
    scope,
    assertIsEqualJson,
    assertIsEqual,
} = require('../all');

scope(__filename, context => {
    assertIsEqualJson(() => rref([
        [ 2, 1, -1, 8 ],
        [ -3, -1, 2, -11 ],
        [ -2, 1, 2, -3 ]
    ]), [[1,0,0,2],[0,1,0,3],[0,0,1,-1]]);

    // full solution
    assertIsEqualJson(() => rref([
        [1, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 1, 0],
        [1, 1, 1, 0, 0, 0, -1],
        [0, 1, 1, 0, 1, 0, -1],
        [0, 1, 1, 0, 0, 1, -1],
    ]), [
        [1,0,0,0,0,0,1],
        [0,1,0,0,0,0,-1],
        [0,0,1,0,0,0,-1],
        [0,0,0,1,0,0,-1],
        [0,0,0,0,1,0,1],
        [0,0,0,0,0,1,1]
    ]);

    // partial solution
    assertIsEqualJson(() => rref([
        [1, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 1, 0],
        [1, 1, 1, 0, 0, 0, -1],
        [0, 1, 1, 0, 1, 0, -1],
    ]), [
        [1,0,0,0,-1,0,0],
        [0,1,0,0,1,0,0],
        [0,0,1,0,0,0,-1],
        [0,0,0,1,1,0,0],
        [0,0,0,0,0,1,1]
    ]);

    // invalid solution
    assertIsEqualJson(() => rref([
        [1, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 1, 0],
        [1, 1, 1, 0, 0, 0, -1],
        [0, 1, 1, 1, 0, 0, -1],
    ]), [
        [1,0,0,0,0,0,0],
        [0,1,0,0,0,-1,-1],
        [0,0,1,0,0,1,0],
        [0,0,0,1,0,0,0],
        [0,0,0,0,1,1,1]
    ]);

    // Invalid solution
    assertIsEqualJson(() => rref([
        [1, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 1, 0],
        [1, 1, 1, 0, 0, 0, -1],
        [0, 1, 1, 1, 0, 0, -1],
        [0, 1, 1, 0, 1, 0, -1],
    ]), [
        [1,0,0,0,0,0,0],
        [0,1,0,0,0,0,0],
        [0,0,1,0,0,0,-1],
        [0,0,0,1,0,0,0],
        [0,0,0,0,1,0,0],
        [0,0,0,0,0,1,1]]);



    // Invalid solution
    let actual = rref([
        [1, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 1, 0],
        [1, 1, 1, 0, 0, 0, -1],
        [0, 1, 1, 1, 0, 0, -1],
        [0, 1, 1, 0, 1, 0, -1],
        [0, 1, 1, 0, 0, 1, -1],
    ]);
    
    let expected = 
[ [ 1, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 0, 0, 0, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 1, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 0, 0 ],
  [ 0, 0, 0, 0, 0, 1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 1 ] ];
    assertIsEqualJson(actual, expected);
});